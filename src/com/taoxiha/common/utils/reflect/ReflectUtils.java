package com.taoxiha.common.utils.reflect;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.util.HashMap;import java.util.Map;import com.taoxiha.common.utils.CollectionUtil;public class ReflectUtils {				/**	 * 传入对象输出以竖线分割的对象值 字符串	 * ex：jakbb|helo|12	 * @param obj 前提obj存在set get方法	 * @return返回对象存在的属性值	 * @throws Exception	 */	@SuppressWarnings("unchecked")	public static String ObjectToStr(Object obj){        Class<?> userClass;		try {			userClass = Class.forName(obj.toString().split("@")[0]);//加载类        Field[] fields = userClass.getDeclaredFields();//获得对象方法集合        String fdname=null;        Method metd = null;        StringBuffer str = new StringBuffer();            for (Field field : fields) {// 遍历该数组                 fdname = field.getName();// 得到字段名，                 metd = userClass.getMethod("get" + change(fdname), null);// 根据字段名找到对应的get方法，null表示无参数                     Object value = metd.invoke(obj, null);// 调用该字段的get方法//                     if(value!=null){                     	// System.out.println(value);                     	str.append(value).append("|");//                     }             }            return str.toString().replaceAll("[\n-\r]", "");		} catch (Exception e) {			e.printStackTrace();			return null;		}	}		   /**     * @param src     *            源字符串     * @return 字符串，将src的第一个字母转换为大写，src为空时返回null     */    private static String change(String src) {        if (src != null) {            StringBuffer sb = new StringBuffer(src);            sb.setCharAt(0, Character.toUpperCase(sb.charAt(0)));            return sb.toString();        } else {            return null;        }    }           	private String name;    	private String pwd;    	private int age;    			public ReflectUtils(String name, String pwd, int age) {			this.name = name;			this.pwd = pwd;			this.age = age;		}		public String getName() {			return name;		}		public void setName(String name) {			this.name = name;		}		public String getPwd() {			return pwd;		}		public void setPwd(String pwd) {			this.pwd = pwd;		}		public int getAge() {			return age;		}		public void setAge(int age) {			this.age = age;		}    	        public static void main(String[] args) {    	String name = "jakbb";		String pwd = "";		int age = 12;		ReflectUtils test=new ReflectUtils(name, pwd, age);		String str=ObjectToStr(test);		System.out.println(str.substring(0, str.length()-1));				Map<String,Object> map = new HashMap<String, Object>();		map.put("name", name);		map.put("pwd", pwd);		map.put("age", age);		System.out.println(CollectionUtil.mapToStr(map));					}        }
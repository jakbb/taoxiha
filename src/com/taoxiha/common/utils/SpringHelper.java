package com.taoxiha.common.utils;import org.apache.log4j.Logger;import org.springframework.beans.BeansException;import org.springframework.context.ApplicationContext;import org.springframework.context.ApplicationContextAware;import com.taoxiha.common.utils.datasource.DataSourceContextHolder;import com.taoxiha.common.utils.datasource.DataSourceType;/** * spring帮助类 得到spring容器所有bean * @author zhangguowei * */public class SpringHelper    implements ApplicationContextAware{    public SpringHelper()    {//    	System.setProperty("log4j.configuration", "conf/log4j.properties");    }    public void setApplicationContext(ApplicationContext context)        throws BeansException    {        if(applicationContext != null)        {            throw new IllegalStateException("ApplicationContextHolder already holded 'applicationContext'.");        } else        {            applicationContext = context;            logger.info((new StringBuilder("holded applicationContext,displayName:")).append(applicationContext.getDisplayName()).toString());            return;        }    }    public static ApplicationContext getApplicationContext()    {        if(applicationContext == null)            throw new IllegalStateException("'applicationContext' property is null,ApplicationContextHolder not yet init.");        else            return applicationContext;    }    public static Object getBean(String beanName)    {        return getApplicationContext().getBean(beanName);    }    public static Object getBean(String beanName,String readOnly)    {    	if(readOnly == null ||readOnly.isEmpty()){    		DataSourceContextHolder.setCustomerType(DataSourceType.MASTER);    	}    	if("1".equals(readOnly)){    		DataSourceContextHolder.setCustomerType(DataSourceType.SILVER_1);    	}    	    	if("2".equals(readOnly)){    		DataSourceContextHolder.setCustomerType(DataSourceType.SILVER_2);    	}        return getApplicationContext().getBean(beanName);    }        public static void cleanHolder()    {        applicationContext = null;    }    private static ApplicationContext applicationContext;	static Logger logger = Logger.getLogger(SpringHelper.class.getName());}
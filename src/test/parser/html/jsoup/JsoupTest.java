package test.parser.html.jsoup;import java.io.File;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import org.junit.Test;import com.taoxiha.common.parser.html.jsoup.Jsoup;import com.taoxiha.common.parser.html.jsoup.nodes.Document;import com.taoxiha.common.parser.html.jsoup.nodes.Element;import com.taoxiha.common.parser.html.jsoup.select.Elements;import com.taoxiha.common.util.ArrayUtils;public class JsoupTest {	String[] key1 = { "img", "img#app-logo", "attr", "src" };	String[] key2 = { "appName", "span#appname", "text", "" };	String[] key3 = { "downUrl", "a#down_as_durl", "attr", "href" };	String[] key4 = { "size", "dd.info-params span.params-size", "val", "" };	String[] key5 = { "updatetime", ".info-params span.params-updatetime", "text", "" };		@Test	public void getDownUrls() throws Exception{		String url="http://as.baidu.com/a/rank?cid=102&s=1";		 Document doc = Jsoup.connect(url).get();	        Elements links = doc.select("a[href]");	        Elements media = doc.select("[src]");	        Elements imports = doc.select("link[href]");	        print("\nMedia: (%d)", media.size());	        for (Element src : media) {	            if (src.tagName().equals("img"))	                print(" * %s: <%s> %sx%s (%s)",	                        src.tagName(), src.attr("abs:src"), src.attr("width"), src.attr("height"),	                        trim(src.attr("alt"), 20));	            else	                print(" * %s: <%s>", src.tagName(), src.attr("abs:src"));	        }	        print("\nImports: (%d)", imports.size());	        for (Element link : imports) {	            print(" * %s <%s> (%s)", link.tagName(),link.attr("abs:href"), link.attr("rel"));	        }	        print("\nLinks: (%d)", links.size());	        for (Element link : links) {	            print(" * a: <%s>  (%s)", link.attr("abs:href"), trim(link.text(), 35));	        }	    }	    private static void print(String msg, Object... args) {	        System.out.println(String.format(msg, args));	    }	    private static String trim(String s, int width) {	        if (s.length() > width)	            return s.substring(0, width-1) + ".";	        else	            return s;	    }	@Test	public void basic() throws Exception {		String file = "/data/crawl/baidu/17.html";		Document docs = Jsoup.parse(new File(file), "utf-8");		List<String[]> list = new ArrayList<String[]>();		list.add(key1);		list.add(key2);		list.add(key3);		list.add(key4);		list.add(key5);//		Elements docs=doc.select("div.content-main.fleft");//		System.out.println(docs.html());		for (String[] str : list) {			// CrawlData data= new CrawlData("img", "img#app-logo", "attr",			// "src");			CrawlData data = new CrawlData(str[0], str[1], str[2], str[3]);			Elements el = docs.select(data.getPath());			String value = "";			switch (ValueType.valueOf(data.getType())) {			case text: {				value = el.text();				break;			}			case attr: {				value = el.attr(data.getAttr());				break;			}			case val: {				value = el.val(data.getAttr()).html();				break;			}			case html: {				value = el.html(data.getAttr()).html();				break;			}			case array:{			    StringBuffer array=new StringBuffer("");				for(Element m:el){					array.append(m).append("|");				}				value=array.toString();				value=value.substring(0, value.length()-1);			}			}			System.out.println(data.getName() + " : " + value);		}		/*		 * Elements els= doc.getElementsByClass("info-top");		 * System.out.println(els.select("img#app-logo").attr("src"));		 * System.out.println(doc.select("a#down_as_durl").attr("href"));		 * System.out.println(els.select("span#appname").text());		 * System.out.println(els.select("span.share-feedback.fright"));		 */	}	class CrawlData {		private String name;		private String path;		private String type;		private String attr;		public CrawlData() {		}		public CrawlData(String name, String path, String type, String attr) {			this.name = name;			this.path = path;			this.type = type;			this.attr = attr;		}		public String getName() {			return name;		}		public void setName(String name) {			this.name = name;		}		public String getPath() {			return path;		}		public void setPath(String path) {			this.path = path;		}		public String getAttr() {			return attr;		}		public void setAttr(String attr) {			this.attr = attr;		}		public String getType() {			return type;		}		public void setType(String type) {			this.type = type;		}	}	enum ValueType {		text, attr, val, html,array	}}